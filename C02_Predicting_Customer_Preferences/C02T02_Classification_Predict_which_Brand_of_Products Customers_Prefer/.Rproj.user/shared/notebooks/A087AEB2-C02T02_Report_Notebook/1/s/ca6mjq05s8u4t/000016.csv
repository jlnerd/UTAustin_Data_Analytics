"0","print(""Decision Tree Model Summary:"")"
"1","[1]"
"1"," ""Decision Tree Model Summary:"""
"1","
"
"0","model_decision_tree_C5"
"1","C5.0"
"1"," "
"1","

"
"1","7424"
"1"," samples"
"1","
"
"1","   6"
"1"," predictor"
"1","
"
"1","   2"
"1"," "
"1","classes:"
"1"," "
"1","'0', '1'"
"1"," "
"1","
"
"1","
"
"1","No pre-processing
"
"1","Resampling:"
"1"," "
"1","Cross-Validated (10 fold, repeated 1 times)"
"1"," "
"1","
"
"1","Summary of sample sizes:"
"1"," "
"1","6681, 6682, 6682, 6682, 6682, 6681, ..."
"1"," "
"1","
"
"1","Resampling results"
"1"," across tuning parameters"
"1",":

"
"1","  model"
"1","  winnow"
"1","  trials"
"1","  Accuracy "
"1","  Kappa    "
"1","
"
"1","  rules"
"1","  FALSE "
"1","   1    "
"1","  0.8178888"
"1","  0.6368363"
"1","
"
"1","  rules"
"1","  FALSE "
"1","  10    "
"1","  0.9187776"
"1","  0.8268130"
"1","
"
"1","  rules"
"1","   TRUE "
"1","   1    "
"1","  0.8293296"
"1","  0.6587103"
"1","
"
"1","  rules"
"1","   TRUE "
"1","  10    "
"1","  0.9229504"
"1","  0.8354124"
"1","
"
"1","  tree "
"1","  FALSE "
"1","   1    "
"1","  0.8178888"
"1","  0.6368363"
"1","
"
"1","  tree "
"1","  FALSE "
"1","  10    "
"1","  0.9232203"
"1","  0.8368493"
"1","
"
"1","  tree "
"1","   TRUE "
"1","   1    "
"1","  0.8290604"
"1","  0.6581053"
"1","
"
"1","  tree "
"1","   TRUE "
"1","  10    "
"1","  0.9181014"
"1","  0.8257198"
"1","
"
"1","
"
"1","Accuracy was used to select the optimal model using the largest value.
"
"1","The final values used for the model were trials = 10, model = tree and winnow = FALSE."
"1","
"
"0","#Confusion matrix stats"
"0","print(""Training Set:"")"
"1","[1]"
"1"," ""Training Set:"""
"1","
"
"0","prediction <- predict(model_decision_tree_C5, training)"
"0","confusionMatrix(prediction, training$brand)"
"1","Confusion Matrix and Statistics

"
"1","          Reference
"
"1","Prediction"
"1","    0"
"1","    1"
"1","
         0"
"1"," 2521"
"1","  233"
"1","
         1"
"1","  287"
"1"," 4383"
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","               Accuracy :"
"1"," 0.93            "
"1","
"
"1","                 95% CI :"
"1"," (0.9239, 0.9357)"
"1","
"
"1","    No Information Rate :"
"1"," 0.6218          "
"1","
"
"1","    P-Value [Acc > NIR] :"
"1"," < 2e-16         "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","                  Kappa :"
"1"," 0.8505          "
"1","
"
"1"," Mcnemar's Test P-Value :"
"1"," 0.02011         "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","            Sensitivity :"
"1"," 0.8978          "
"1","
"
"1","            Specificity :"
"1"," 0.9495          "
"1","
"
"1","         Pos Pred Value :"
"1"," 0.9154          "
"1","
"
"1","         Neg Pred Value :"
"1"," 0.9385          "
"1","
"
"1","             Prevalence :"
"1"," 0.3782          "
"1","
"
"1","         Detection Rate :"
"1"," 0.3396          "
"1","
"
"1","   Detection Prevalence :"
"1"," 0.3710          "
"1","
"
"1","      Balanced Accuracy :"
"1"," 0.9237          "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","       'Positive' Class :"
"1"," 0               "
"1","
"
"1","                         "
"1","                 "
"1","
"
"0","print(""Testing Set:"")"
"1","[1]"
"1"," ""Testing Set:"""
"1","
"
"0","prediction <- predict(model_decision_tree_C5, testing)"
"0","confusionMatrix(prediction, testing$brand)"
"1","Confusion Matrix and Statistics

"
"1","          Reference
"
"1","Prediction"
"1","    0"
"1","    1"
"1","
         0"
"1","  833"
"1","   86"
"1","
         1"
"1","  103"
"1"," 1452"
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","               Accuracy :"
"1"," 0.9236          "
"1","
"
"1","                 95% CI :"
"1"," (0.9124, 0.9338)"
"1","
"
"1","    No Information Rate :"
"1"," 0.6217          "
"1","
"
"1","    P-Value [Acc > NIR] :"
"1"," <2e-16          "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","                  Kappa :"
"1"," 0.837           "
"1","
"
"1"," Mcnemar's Test P-Value :"
"1"," 0.2445          "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","            Sensitivity :"
"1"," 0.8900          "
"1","
"
"1","            Specificity :"
"1"," 0.9441          "
"1","
"
"1","         Pos Pred Value :"
"1"," 0.9064          "
"1","
"
"1","         Neg Pred Value :"
"1"," 0.9338          "
"1","
"
"1","             Prevalence :"
"1"," 0.3783          "
"1","
"
"1","         Detection Rate :"
"1"," 0.3367          "
"1","
"
"1","   Detection Prevalence :"
"1"," 0.3715          "
"1","
"
"1","      Balanced Accuracy :"
"1"," 0.9170          "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","       'Positive' Class :"
"1"," 0               "
"1","
"
"1","                         "
"1","                 "
"1","
"
"0","print(""Train+Test Set:"")"
"1","[1]"
"1"," ""Train+Test Set:"""
"1","
"
"0","prediction <- predict(model_decision_tree_C5, df_preprocesssed)"
"0","confusionMatrix(prediction, df_preprocesssed$brand)"
"1","Confusion Matrix and Statistics

"
"1","          Reference
"
"1","Prediction"
"1","    0"
"1","    1"
"1","
         0"
"1"," 3354"
"1","  319"
"1","
         1"
"1","  390"
"1"," 5835"
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","               Accuracy :"
"1"," 0.9284          "
"1","
"
"1","                 95% CI :"
"1"," (0.9231, 0.9334)"
"1","
"
"1","    No Information Rate :"
"1"," 0.6217          "
"1","
"
"1","    P-Value [Acc > NIR] :"
"1"," < 2.2e-16       "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","                  Kappa :"
"1"," 0.8471          "
"1","
"
"1"," Mcnemar's Test P-Value :"
"1"," 0.008566        "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","            Sensitivity :"
"1"," 0.8958          "
"1","
"
"1","            Specificity :"
"1"," 0.9482          "
"1","
"
"1","         Pos Pred Value :"
"1"," 0.9132          "
"1","
"
"1","         Neg Pred Value :"
"1"," 0.9373          "
"1","
"
"1","             Prevalence :"
"1"," 0.3783          "
"1","
"
"1","         Detection Rate :"
"1"," 0.3389          "
"1","
"
"1","   Detection Prevalence :"
"1"," 0.3711          "
"1","
"
"1","      Balanced Accuracy :"
"1"," 0.9220          "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","       'Positive' Class :"
"1"," 0               "
"1","
"
"1","                         "
"1","                 "
"1","
"
"0","print(""Random Forest with Manual Grid Summary:"")"
"1","[1]"
"1"," ""Random Forest with Manual Grid Summary:"""
"1","
"
"0","rfFit_manualgrid_1"
"1","Random Forest"
"1"," "
"1","

"
"1","7424"
"1"," samples"
"1","
"
"1","   6"
"1"," predictor"
"1","
"
"1","   2"
"1"," "
"1","classes:"
"1"," "
"1","'0', '1'"
"1"," "
"1","
"
"1","
"
"1","No pre-processing
"
"1","Resampling:"
"1"," "
"1","Cross-Validated (10 fold, repeated 1 times)"
"1"," "
"1","
"
"1","Summary of sample sizes:"
"1"," "
"1","6681, 6682, 6681, 6682, 6682, 6681, ..."
"1"," "
"1","
"
"1","Resampling results"
"1"," across tuning parameters"
"1",":

"
"1","  mtry"
"1","  Accuracy "
"1","  Kappa       "
"1","
"
"1","  1   "
"1","  0.6217673"
"1","  0.0000000000"
"1","
"
"1","  2   "
"1","  0.6219020"
"1","  0.0004418206"
"1","
"
"1","  3   "
"1","  0.7267010"
"1","  0.3390088145"
"1","
"
"1","  4   "
"1","  0.8537144"
"1","  0.6805815658"
"1","
"
"1","  5   "
"1","  0.8923742"
"1","  0.7709911267"
"1","
"
"1","
"
"1","Accuracy was used to select the optimal model using the largest value.
"
"1","The final value used for the model was mtry = 5."
"1","
"
"0","#Confusion matrix stats"
"0","print(""Training Set:"")"
"1","[1]"
"1"," ""Training Set:"""
"1","
"
"0","prediction <- predict(rfFit_manualgrid_1, training)"
"0","print(confusionMatrix(prediction, training$brand))"
"1","Confusion Matrix and Statistics

"
"1","          Reference
"
"1","Prediction"
"1","    0"
"1","    1"
"1","
         0"
"1"," 2784"
"1","    5"
"1","
         1"
"1","   24"
"1"," 4611"
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","               Accuracy :"
"1"," 0.9961          "
"1","
"
"1","                 95% CI :"
"1"," (0.9944, 0.9974)"
"1","
"
"1","    No Information Rate :"
"1"," 0.6218          "
"1","
"
"1","    P-Value [Acc > NIR] :"
"1"," < 2.2e-16       "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","                  Kappa :"
"1"," 0.9917          "
"1","
"
"1"," Mcnemar's Test P-Value :"
"1"," 0.0008302       "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","            Sensitivity :"
"1"," 0.9915          "
"1","
"
"1","            Specificity :"
"1"," 0.9989          "
"1","
"
"1","         Pos Pred Value :"
"1"," 0.9982          "
"1","
"
"1","         Neg Pred Value :"
"1"," 0.9948          "
"1","
"
"1","             Prevalence :"
"1"," 0.3782          "
"1","
"
"1","         Detection Rate :"
"1"," 0.3750          "
"1","
"
"1","   Detection Prevalence :"
"1"," 0.3757          "
"1","
"
"1","      Balanced Accuracy :"
"1"," 0.9952          "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","       'Positive' Class :"
"1"," 0               "
"1","
"
"1","                         "
"1","                 "
"1","
"
"0","print(""Testing Set:"")"
"1","[1]"
"1"," ""Testing Set:"""
"1","
"
"0","prediction <- predict(rfFit_manualgrid_1, testing)"
"0","confusionMatrix(prediction, testing$brand)"
"1","Confusion Matrix and Statistics

"
"1","          Reference
"
"1","Prediction"
"1","    0"
"1","    1"
"1","
         0"
"1","  815"
"1","  135"
"1","
         1"
"1","  121"
"1"," 1403"
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","               Accuracy :"
"1"," 0.8965          "
"1","
"
"1","                 95% CI :"
"1"," (0.8838, 0.9083)"
"1","
"
"1","    No Information Rate :"
"1"," 0.6217          "
"1","
"
"1","    P-Value [Acc > NIR] :"
"1"," <2e-16          "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","                  Kappa :"
"1"," 0.7807          "
"1","
"
"1"," Mcnemar's Test P-Value :"
"1"," 0.4165          "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","            Sensitivity :"
"1"," 0.8707          "
"1","
"
"1","            Specificity :"
"1"," 0.9122          "
"1","
"
"1","         Pos Pred Value :"
"1"," 0.8579          "
"1","
"
"1","         Neg Pred Value :"
"1"," 0.9206          "
"1","
"
"1","             Prevalence :"
"1"," 0.3783          "
"1","
"
"1","         Detection Rate :"
"1"," 0.3294          "
"1","
"
"1","   Detection Prevalence :"
"1"," 0.3840          "
"1","
"
"1","      Balanced Accuracy :"
"1"," 0.8915          "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","       'Positive' Class :"
"1"," 0               "
"1","
"
"1","                         "
"1","                 "
"1","
"
"0","print(""Train+Test Set:"")"
"1","[1]"
"1"," ""Train+Test Set:"""
"1","
"
"0","prediction <- predict(rfFit_manualgrid_1, df_preprocesssed)"
"0","confusionMatrix(prediction, df_preprocesssed$brand)"
"1","Confusion Matrix and Statistics

"
"1","          Reference
"
"1","Prediction"
"1","    0"
"1","    1"
"1","
         0"
"1"," 3598"
"1","  141"
"1","
         1"
"1","  146"
"1"," 6013"
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","               Accuracy :"
"1"," 0.971           "
"1","
"
"1","                 95% CI :"
"1"," (0.9675, 0.9742)"
"1","
"
"1","    No Information Rate :"
"1"," 0.6217          "
"1","
"
"1","    P-Value [Acc > NIR] :"
"1"," <2e-16          "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","                  Kappa :"
"1"," 0.9383          "
"1","
"
"1"," Mcnemar's Test P-Value :"
"1"," 0.8133          "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","            Sensitivity :"
"1"," 0.9610          "
"1","
"
"1","            Specificity :"
"1"," 0.9771          "
"1","
"
"1","         Pos Pred Value :"
"1"," 0.9623          "
"1","
"
"1","         Neg Pred Value :"
"1"," 0.9763          "
"1","
"
"1","             Prevalence :"
"1"," 0.3783          "
"1","
"
"1","         Detection Rate :"
"1"," 0.3635          "
"1","
"
"1","   Detection Prevalence :"
"1"," 0.3778          "
"1","
"
"1","      Balanced Accuracy :"
"1"," 0.9690          "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","       'Positive' Class :"
"1"," 0               "
"1","
"
"1","                         "
"1","                 "
"1","
"
"0","#Variable Importance Data:"
"0","varImp(model_decision_tree_C5)"
"1","C5.0"
"1"," "
"1","variable importance

"
"1","  only "
"1","20"
"1"," most important variables shown (out of "
"1","34"
"1",")

"
