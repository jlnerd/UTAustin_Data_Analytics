confusionMatrix(prediction, df_preprocesssed$brand)
#Variable Importance Data:
varImp(model_decision_tree_C5)
varImp(rfFit_manualgrid_1)
df_validation <- read_csv("SurveyIncomplete.csv");
head(df_validation)
print(paste("NROW(df):",NROW(df_validation)))
# Update Data Types
df_validation$"elevel" <- as.factor(df_validation$"elevel")
df_validation$"car" <- as.factor(df_validation$"car")
df_validation$"zipcode" <- as.factor(df_validation$zipcode)
df_validation$brand<-as.factor(df_validation$brand)
# transform the dataset using the parameters
df_validation_preprocesssed<- predict(preprocessParams, df_validation)
print("Testing Set:")
prediction <- predict(rfFit_manualgrid_1, df_validation_preprocesssed)
confusionMatrix(prediction, df_validation_preprocesssed$brand)
df_validation <- read_csv("SurveyIncomplete.csv");
head(df_validation)
print(paste("NROW(df):",NROW(df_validation)))
# Update Data Types
df_validation$"elevel" <- as.factor(df_validation$"elevel")
df_validation$"car" <- as.factor(df_validation$"car")
df_validation$"zipcode" <- as.factor(df_validation$zipcode)
df_validation$brand<-as.factor(df_validation$brand)
Get_to_know_data(df_validation)
# transform the dataset using the parameters
df_validation_preprocesssed<- predict(preprocessParams, df_validation)
print("Testing Set:")
prediction <- predict(rfFit_manualgrid_1, df_validation_preprocesssed)
confusionMatrix(prediction, df_validation_preprocesssed$brand)
df_validation <- read_csv("SurveyIncomplete.csv");
head(df_validation)
print(paste("NROW(df):",NROW(df_validation)))
# Update Data Types
df_validation$"elevel" <- as.factor(df_validation$"elevel")
df_validation$"car" <- as.factor(df_validation$"car")
df_validation$"zipcode" <- as.factor(df_validation$zipcode)
df_validation$brand<-as.factor(df_validation$brand)
Get_to_know_data(df_validation)
# transform the dataset using the parameters
df_validation_preprocesssed<- predict(preprocessParams, df_validation)
Get_to_know_data(df_validation_preprocesssed)
print("Testing Set:")
prediction <- predict(rfFit_manualgrid_1, df_validation_preprocesssed)
confusionMatrix(prediction, df_validation_preprocesssed$brand)
df_validation <- read_csv("SurveyIncomplete.csv");
head(df_validation)
print(paste("NROW(df):",NROW(df_validation)))
view(df_validation)
df_validation <- read_csv("SurveyIncomplete.csv");
head(df_validation)
print(paste("NROW(df):",NROW(df_validation)))
View(df_validation)
# Update Data Types
df_validation$"elevel" <- as.factor(df_validation$"elevel")
df_validation$"car" <- as.factor(df_validation$"car")
df_validation$"zipcode" <- as.factor(df_validation$zipcode)
df_validation$brand<-as.factor(df_validation$brand)
Get_to_know_data(df_validation)
# transform the dataset using the parameters
df_validation_preprocesssed<- predict(preprocessParams, df_validation)
Get_to_know_data(df_validation_preprocesssed)
print("Testing Set:")
prediction <- predict(rfFit_manualgrid_1, df_validation_preprocesssed)
confusionMatrix(prediction, df_validation_preprocesssed$brand)
df_validation <- read_csv("SurveyIncomplete.csv");
head(df_validation)
print(paste("NROW(df):",NROW(df_validation)))
View(df_validation)
# Update Data Types
df_validation$"elevel" <- as.factor(df_validation$"elevel")
df_validation$"car" <- as.factor(df_validation$"car")
df_validation$"zipcode" <- as.factor(df_validation$zipcode)
df_validation$brand<-as.factor(df_validation$brand)
Get_to_know_data(df_validation)
# transform the dataset using the parameters
df_validation_preprocesssed<- predict(preprocessParams, df_validation)
Get_to_know_data(df_validation_preprocesssed)
print("Testing Set:")
prediction <- predict(rfFit_manualgrid_1, df_validation_preprocesssed)
postResample(prediction, df_validation_preprocesssed$brand)
#confusionMatrix(prediction, df_validation_preprocesssed$brand)
df_validation <- read_csv("SurveyIncomplete.csv");
head(df_validation)
print(paste("NROW(df):",NROW(df_validation)))
View(df_validation)
# Update Data Types
df_validation$"elevel" <- as.factor(df_validation$"elevel")
df_validation$"car" <- as.factor(df_validation$"car")
df_validation$"zipcode" <- as.factor(df_validation$zipcode)
df_validation$brand<-as.factor(df_validation$brand)
Get_to_know_data(df_validation)
# transform the dataset using the parameters
df_validation_preprocesssed<- predict(preprocessParams, df_validation)
Get_to_know_data(df_validation_preprocesssed)
print("Testing Set:")
prediction <- predict(rfFit_manualgrid_1, df_validation_preprocesssed)
confusionMatrix(prediction, df_validation_preprocesssed$brand)
df_validation <- read_csv("SurveyIncomplete.csv");
head(df_validation)
print(paste("NROW(df):",NROW(df_validation)))
View(df_validation)
# Update Data Types
df_validation$"elevel" <- as.factor(df_validation$"elevel")
df_validation$"car" <- as.factor(df_validation$"car")
df_validation$"zipcode" <- as.factor(df_validation$zipcode)
df_validation$brand<-as.factor(df_validation$brand)
Get_to_know_data(df_validation)
# transform the dataset using the parameters
df_validation_preprocesssed<- predict(preprocessParams, df_validation)
Get_to_know_data(df_validation_preprocesssed)
print("Testing Set:")
prediction <- predict(rfFit_manualgrid_1, df_validation_preprocesssed)
confusionMatrix(prediction, df_validation_preprocesssed$brand)
postResample(prediciton, df_validation_preprocesssed$brand)
df_validation <- read_csv("SurveyIncomplete.csv");
head(df_validation)
print(paste("NROW(df):",NROW(df_validation)))
View(df_validation)
# Update Data Types
df_validation$"elevel" <- as.factor(df_validation$"elevel")
df_validation$"car" <- as.factor(df_validation$"car")
df_validation$"zipcode" <- as.factor(df_validation$zipcode)
df_validation$brand<-as.factor(df_validation$brand)
Get_to_know_data(df_validation)
# transform the dataset using the parameters
df_validation_preprocesssed<- predict(preprocessParams, df_validation)
Get_to_know_data(df_validation_preprocesssed)
print("Testing Set:")
prediction <- predict(rfFit_manualgrid_1, df_validation_preprocesssed)
confusionMatrix(prediction, df_validation_preprocesssed$brand)
postResample(prediction, df_validation_preprocesssed$brand)
df_validation <- read_csv("SurveyIncomplete.csv");
head(df_validation)
print(paste("NROW(df):",NROW(df_validation)))
#View(df_validation)
# Update Data Types
df_validation$"elevel" <- as.factor(df_validation$"elevel")
df_validation$"car" <- as.factor(df_validation$"car")
df_validation$"zipcode" <- as.factor(df_validation$zipcode)
df_validation$brand<-as.factor(df_validation$brand)
Get_to_know_data(df_validation)
# transform the dataset using the parameters
df_validation_preprocesssed<- predict(preprocessParams, df_validation)
Get_to_know_data(df_validation_preprocesssed)
print("Testing Set:")
prediction <- predict(rfFit_manualgrid_1, df_validation_preprocesssed)
confusionMatrix(prediction, df_validation_preprocesssed$brand)
postResample(prediction, df_validation_preprocesssed$brand)
postResample(prediction, df_validation_preprocesssed$brand)
summary(prediction)
summary(prediction)
summary(df_validation_preprocesssed$brand)
summary(df_validation_preprocesssed$brand)
summary(df$brand)
summary(df_validation_preprocesssed$brand)
"Train-test set brand distribution:"
summary(df$brand)
"Validation set brand distirbution:"
summary(df_validation_preprocesssed$brand)
plot(t$rfFit_manualgrid_1)
plot(rfFit_manualgrid_1$finalModel)
text(rfFit_manualgrid_1$finalModel)
library(dplyr)
library(ggraph)
install.packages(ggforce)
install.packages('ggforce')
library(dplyr)
library(ggraph)
library(igraph)
tree_func <- function(final_model,
tree_num) {
# get tree by index
tree <- randomForest::getTree(final_model,
k = tree_num,
labelVar = TRUE) %>%
tibble::rownames_to_column() %>%
# make leaf split points to NA, so the 0s won't get plotted
mutate(`split point` = ifelse(is.na(prediction), `split point`, NA))
# prepare data frame for graph
graph_frame <- data.frame(from = rep(tree$rowname, 2),
to = c(tree$`left daughter`, tree$`right daughter`))
# convert to graph and delete the last node that we don't want to plot
graph <- graph_from_data_frame(graph_frame) %>%
delete_vertices("0")
# set node labels
V(graph)$node_label <- gsub("_", " ", as.character(tree$`split var`))
V(graph)$leaf_label <- as.character(tree$prediction)
V(graph)$split <- as.character(round(tree$`split point`, digits = 2))
# plot
plot <- ggraph(graph, 'dendrogram') +
theme_bw() +
geom_edge_link() +
geom_node_point() +
geom_node_text(aes(label = node_label), na.rm = TRUE, repel = TRUE) +
geom_node_label(aes(label = split), vjust = 2.5, na.rm = TRUE, fill = "white") +
geom_node_label(aes(label = leaf_label, fill = leaf_label), na.rm = TRUE,
repel = TRUE, colour = "white", fontface = "bold", show.legend = FALSE) +
theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
plot.background = element_rect(fill = "white"),
panel.border = element_blank(),
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.title = element_text(size = 18))
print(plot)
}
model_rf <- rfFit_manualgrid_1
tree_num <- which(model_rf$finalModel$forest$ndbigtree == min(model_rf$finalModel$forest$ndbigtree))
tree_func(final_model = model_rf$finalModel, tree_num)
install.packages('labeling')
library(dplyr)
library(ggraph)
library(igraph)
tree_func <- function(final_model,
tree_num) {
# get tree by index
tree <- randomForest::getTree(final_model,
k = tree_num,
labelVar = TRUE) %>%
tibble::rownames_to_column() %>%
# make leaf split points to NA, so the 0s won't get plotted
mutate(`split point` = ifelse(is.na(prediction), `split point`, NA))
# prepare data frame for graph
graph_frame <- data.frame(from = rep(tree$rowname, 2),
to = c(tree$`left daughter`, tree$`right daughter`))
# convert to graph and delete the last node that we don't want to plot
graph <- graph_from_data_frame(graph_frame) %>%
delete_vertices("0")
# set node labels
V(graph)$node_label <- gsub("_", " ", as.character(tree$`split var`))
V(graph)$leaf_label <- as.character(tree$prediction)
V(graph)$split <- as.character(round(tree$`split point`, digits = 2))
# plot
plot <- ggraph(graph, 'dendrogram') +
theme_bw() +
geom_edge_link() +
geom_node_point() +
geom_node_text(aes(label = node_label), na.rm = TRUE, repel = TRUE) +
geom_node_label(aes(label = split), vjust = 2.5, na.rm = TRUE, fill = "white") +
geom_node_label(aes(label = leaf_label, fill = leaf_label), na.rm = TRUE,
repel = TRUE, colour = "white", fontface = "bold", show.legend = FALSE) +
theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
plot.background = element_rect(fill = "white"),
panel.border = element_blank(),
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.title = element_text(size = 18))
print(plot)
}
model_rf <- rfFit_manualgrid_1
tree_num <- which(model_rf$finalModel$forest$ndbigtree == min(model_rf$finalModel$forest$ndbigtree))
tree_func(final_model = model_rf$finalModel, tree_num)
plot(df$brand,df$salary)#Scatter (Box) Plot
subplot_cols = 2
subplot_rows = 2
par(mfrow=c(subplot_rows,subplot_cols))
plot(df$brand,df$salary, xlab = 'brand', ylab = 'salary')
plot(df$brand,df$age, xlab = 'brand', ylab = 'age')
plot(df$brand,df$credit, xlab = 'brand', ylab = 'credit')
subplot_cols = 2
subplot_rows = 2
par(mfrow=c(subplot_rows,subplot_cols))
plot(df$brand,df$salary, xlab = 'brand', ylab = 'salary',log='y')
plot(df$brand,df$age, xlab = 'brand', ylab = 'age')
plot(df$brand,df$credit, xlab = 'brand', ylab = 'credit')
subplot_cols = 2
subplot_rows = 2
par(mfrow=c(subplot_rows,subplot_cols))
plot(df$brand,df$salary, xlab = 'brand', ylab = 'salary',log='y')
plot(df$brand,df$age, xlab = 'brand', ylab = 'age',log='y')
plot(df$brand,df$credit, xlab = 'brand', ylab = 'credit',log='y')
subplot_cols = 2
subplot_rows = 2
par(mfrow=c(subplot_rows,subplot_cols))
plot(df$brand,df$salary, xlab = 'brand', ylab = 'salary',log='y')
plot(df$brand,df$age, xlab = 'brand', ylab = 'age',log='y')
plot(df$brand,df$credit, xlab = 'brand', ylab = 'credit')
subplot_cols = 2
subplot_rows = 2
par(mfrow=c(subplot_rows,subplot_cols))
plot(df$brand,df$salary, xlab = 'brand', ylab = 'salary',log='y')
plot(df$brand,df$age, xlab = 'brand', ylab = 'age',log='y')
plot(df$brand,df$credit, xlab = 'brand', ylab = 'credit',log='y')
subplot_cols = 2
subplot_rows = 2
par(mfrow=c(subplot_rows,subplot_cols))
plot(df$brand,df$salary, xlab = 'brand', ylab = 'salary',log='y')
plot(df$brand,df$age, xlab = 'brand', ylab = 'age',log='y')
plot(df$brand,df$credit, xlab = 'brand', ylab = 'credit',log='y')
subplot_cols = 2
subplot_rows = 2
par(mfrow=c(subplot_rows,subplot_cols))
plot(df$brand,df$salary, xlab = 'brand', ylab = 'salary',log='y')
plot(df$brand,df$age, xlab = 'brand', ylab = 'age',log='y')
plot(df$brand,df$credit, xlab = 'brand', ylab = 'credit',log='y')
subplot_cols = 2
subplot_rows = 2
par(mfrow=c(subplot_rows,subplot_cols))
plot(df$brand,df$salary, xlab = 'brand', ylab = 'salary')
plot(df$brand,df$age, xlab = 'brand', ylab = 'age')
plot(df$brand,df$credit, xlab = 'brand', ylab = 'credit')
plot(df$salary,df$age, xlab = 'brand', ylab = 'salary')
subplot_cols = 2
subplot_rows = 2
par(mfrow=c(subplot_rows,subplot_cols))
plot(df$brand,df$salary, xlab = 'brand', ylab = 'salary')
plot(df$brand,df$age, xlab = 'brand', ylab = 'age')
plot(df$brand,df$credit, xlab = 'brand', ylab = 'credit')
plot(df$salary,df$age, xlab = 'brand', ylab = 'salary',log='xy')
subplot_cols = 2
subplot_rows = 2
par(mfrow=c(subplot_rows,subplot_cols))
plot(df$brand,df$salary, xlab = 'brand', ylab = 'salary')
plot(df$brand,df$age, xlab = 'brand', ylab = 'age')
plot(df$brand,df$credit, xlab = 'brand', ylab = 'credit')
plot(df$salary,df$age, xlab = 'brand', ylab = 'salary',log='xy',type="p")
subplot_cols = 2
subplot_rows = 2
par(mfrow=c(subplot_rows,subplot_cols))
plot(df$brand,df$salary, xlab = 'brand', ylab = 'salary')
plot(df$brand,df$age, xlab = 'brand', ylab = 'age')
plot(df$brand,df$credit, xlab = 'brand', ylab = 'credit')
plot(df$salary,df$age, xlab = 'brand', ylab = 'salary',log='xy',col="b")
subplot_cols = 2
subplot_rows = 2
par(mfrow=c(subplot_rows,subplot_cols))
plot(df$brand,df$salary, xlab = 'brand', ylab = 'salary')
plot(df$brand,df$age, xlab = 'brand', ylab = 'age')
plot(df$brand,df$credit, xlab = 'brand', ylab = 'credit')
plot(df$salary,df$age, xlab = 'brand', ylab = 'salary',log='xy',col="blue")
subplot_cols = 2
subplot_rows = 2
par(mfrow=c(subplot_rows,subplot_cols))
plot(df$brand,df$salary, xlab = 'brand', ylab = 'salary')
plot(df$brand,df$age, xlab = 'brand', ylab = 'age')
plot(df$brand,df$credit, xlab = 'brand', ylab = 'credit')
plot(df$salary,df$age, xlab = 'brand', ylab = 'salary',log='xy',col=df$credit)
subplot_cols = 2
subplot_rows = 2
par(mfrow=c(subplot_rows,subplot_cols))
plot(df$brand,df$salary, xlab = 'brand', ylab = 'salary')
plot(df$brand,df$age, xlab = 'brand', ylab = 'age')
plot(df$brand,df$credit, xlab = 'brand', ylab = 'credit')
plot(df$salary,df$age, xlab = 'brand', ylab = 'salary',log='xy',col=df$credit, type="p")
subplot_cols = 2
subplot_rows = 2
par(mfrow=c(subplot_rows,subplot_cols))
plot(df$brand,df$salary, xlab = 'brand', ylab = 'salary')
plot(df$brand,df$age, xlab = 'brand', ylab = 'age')
plot(df$brand,df$credit, xlab = 'brand', ylab = 'credit')
plot(df$salary,df$age, xlab = 'brand', ylab = 'salary',log='xy',col=df$credit, type="p",pch=1)
subplot_cols = 2
subplot_rows = 2
par(mfrow=c(subplot_rows,subplot_cols))
plot(df$brand,df$salary, xlab = 'brand', ylab = 'salary')
plot(df$brand,df$age, xlab = 'brand', ylab = 'age')
plot(df$brand,df$credit, xlab = 'brand', ylab = 'credit')
plot(df$salary,df$age, xlab = 'brand', ylab = 'salary',log='xy',col=df$credit, type="p",pch=19)
subplot_cols = 2
subplot_rows = 2
par(mfrow=c(subplot_rows,subplot_cols))
plot(df$brand,df$salary, xlab = 'brand', ylab = 'salary')
plot(df$brand,df$age, xlab = 'brand', ylab = 'age')
plot(df$brand,df$credit, xlab = 'brand', ylab = 'credit')
plot(df$salary,df$age, xlab = 'brand', ylab = 'salary',log='xy',col=df$credit, type="p",pch=20)
subplot_cols = 2
subplot_rows = 2
par(mfrow=c(subplot_rows,subplot_cols))
plot(df$brand,df$salary, xlab = 'brand', ylab = 'salary')
plot(df$brand,df$age, xlab = 'brand', ylab = 'age')
plot(df$brand,df$credit, xlab = 'brand', ylab = 'credit')
plot(df$salary,df$age, xlab = 'brand', ylab = 'salary',log='xy',col=df$credit, type="p",pch=21)
subplot_cols = 2
subplot_rows = 2
par(mfrow=c(subplot_rows,subplot_cols))
plot(df$brand,df$salary, xlab = 'brand', ylab = 'salary')
plot(df$brand,df$age, xlab = 'brand', ylab = 'age')
plot(df$brand,df$credit, xlab = 'brand', ylab = 'credit')
plot(df$salary,df$age, xlab = 'brand', ylab = 'salary',log='xy',col=df$credit, type="p",pch=20)
subplot_cols = 2
subplot_rows = 2
par(mfrow=c(subplot_rows,subplot_cols))
plot(df$brand,df$salary, xlab = 'brand', ylab = 'salary')
plot(df$brand,df$age, xlab = 'brand', ylab = 'age')
plot(df$brand,df$credit, xlab = 'brand', ylab = 'credit')
plot(df$salary,df$age, xlab = 'brand', ylab = 'salary',log='xy', type="p",pch=20)
subplot_cols = 2
subplot_rows = 2
par(mfrow=c(subplot_rows,subplot_cols))
plot(df$brand,df$salary, xlab = 'brand', ylab = 'salary')
plot(df$brand,df$age, xlab = 'brand', ylab = 'age')
plot(df$brand,df$credit, xlab = 'brand', ylab = 'credit')
plot(df$salary,df$age, xlab = 'salary', ylab = 'age',log='xy', type="p",pch=20,col=df$brand)
subplot_cols = 2
subplot_rows = 2
par(mfrow=c(subplot_rows,subplot_cols))
plot(df$brand,df$salary, xlab = 'brand', ylab = 'salary')
plot(df$brand,df$age, xlab = 'brand', ylab = 'age')
plot(df$brand,df$credit, xlab = 'brand', ylab = 'credit')
plot(df$salary,df$age, xlab = 'salary', ylab = 'age', type="p",pch=20,col=df$brand)
subplot_cols = 2
subplot_rows = 3
par(mfrow=c(subplot_rows,subplot_cols))
plot(df$brand,df$salary, xlab = 'brand', ylab = 'salary')
plot(df$brand,df$age, xlab = 'brand', ylab = 'age')
plot(df$brand,df$credit, xlab = 'brand', ylab = 'credit')
plot(df$salary,df$age, xlab = 'salary', ylab = 'age', type="p",pch=20,col=df$brand)
plot(df$salary,df$credit, xlab = 'salary', ylab = 'age', type="p",pch=20,col=df$brand)
subplot_cols = 2
subplot_rows = 3
par(mfrow=c(subplot_rows,subplot_cols))
plot(df$brand,df$salary, xlab = 'brand', ylab = 'salary')
plot(df$brand,df$age, xlab = 'brand', ylab = 'age')
plot(df$brand,df$credit, xlab = 'brand', ylab = 'credit')
plot(df$salary,df$age, xlab = 'salary', ylab = 'age', type="p",pch=20,col=df$brand)
plot(df$salary,df$credit, xlab = 'salary', ylab = 'credit', type="p",pch=20,col=df$brand)
plot(df$age,df$credit, xlab = 'age', ylab = 'credit', type="p",pch=20,col=df$brand)
subplot_cols = 2
subplot_rows = 3
par(mfrow=c(subplot_rows,subplot_cols))
plot(df$brand,df$salary, xlab = 'brand', ylab = 'salary')
plot(df$brand,df$age, xlab = 'brand', ylab = 'age')
plot(df$brand,df$credit, xlab = 'brand', ylab = 'credit')
plot(df$salary,df$age, xlab = 'salary', ylab = 'age', type="p",pch=20,col=df$brand)
plot(df$salary,df$credit, xlab = 'salary', ylab = 'credit', type="p",pch=20,col=df$brand)
plot(df$age,df$credit, xlab = 'age', ylab = 'credit', type="p",pch=20,col=df$brand)
subplot_cols = 2
subplot_rows = 3
par(mfrow=c(subplot_rows,subplot_cols))
plot(df$brand,df$salary, xlab = 'brand', ylab = 'salary')
plot(df$brand,df$age, xlab = 'brand', ylab = 'age')
plot(df$brand,df$credit, xlab = 'brand', ylab = 'credit')
plot(df$salary,df$age, xlab = 'salary', ylab = 'age', type="p",pch=20,col=df$brand)
legend(df$brand)
subplot_cols = 2
subplot_rows = 3
par(mfrow=c(subplot_rows,subplot_cols))
plot(df$brand,df$salary, xlab = 'brand', ylab = 'salary')
plot(df$brand,df$age, xlab = 'brand', ylab = 'age')
plot(df$brand,df$credit, xlab = 'brand', ylab = 'credit')
plot(df$salary,df$age, xlab = 'salary', ylab = 'age', type="p",pch=20,col=df$brand)
legend(list(0,1))
subplot_cols = 2
subplot_rows = 3
par(mfrow=c(subplot_rows,subplot_cols))
plot(df$brand,df$salary, xlab = 'brand', ylab = 'salary')
plot(df$brand,df$age, xlab = 'brand', ylab = 'age')
plot(df$brand,df$credit, xlab = 'brand', ylab = 'credit')
plot(df$salary,df$age, xlab = 'salary', ylab = 'age', type="p",pch=20,col=df$brand)
plot(df$salary,df$credit, xlab = 'salary', ylab = 'credit', type="p",pch=20,col=df$brand)
plot(df$age,df$credit, xlab = 'age', ylab = 'credit', type="p",pch=20,col=df$brand)
subplot_cols = 2
subplot_rows = 3
par(mfrow=c(subplot_rows,subplot_cols))
plot(df$brand,df$salary, xlab = 'brand', ylab = 'salary')
plot(df$brand,df$age, xlab = 'brand', ylab = 'age')
plot(df$brand,df$credit, xlab = 'brand', ylab = 'credit')
plot(df$salary,df$age, xlab = 'salary', ylab = 'age', type="p",pch=20,col=df$brand)
plot(df$salary,df$credit, xlab = 'salary', ylab = 'credit', type="p",pch=20,col=df$brand)
plot(df$age,df$credit, xlab = 'age', ylab = 'credit', type="p",pch=20,col=df$brand)
subplot_cols = 2
subplot_rows = 3
par(mfrow=c(subplot_rows,subplot_cols))
plot(df$brand,df$salary, xlab = 'brand', ylab = 'salary')
plot(df$brand,df$age, xlab = 'brand', ylab = 'age')
plot(df$brand,df$credit, xlab = 'brand', ylab = 'credit')
plot(df$salary,df$age, xlab = 'salary', ylab = 'age', type="p",pch=20,col=df$brand)
legend(1, 95, legend=c("Line 1", "Line 2"),
col=c("red", "blue"), lty=1:2, cex=0.8)
plot(df$salary,df$credit, xlab = 'salary', ylab = 'credit', type="p",pch=20,col=df$brand)
plot(df$age,df$credit, xlab = 'age', ylab = 'credit', type="p",pch=20,col=df$brand)
subplot_cols = 2
subplot_rows = 3
par(mfrow=c(subplot_rows,subplot_cols))
plot(df$brand,df$salary, xlab = 'brand', ylab = 'salary')
plot(df$brand,df$age, xlab = 'brand', ylab = 'age')
plot(df$brand,df$credit, xlab = 'brand', ylab = 'credit')
plot(df$salary,df$age, xlab = 'salary', ylab = 'age', type="p",pch=20,col=df$brand)
plot(df$salary,df$credit, xlab = 'salary', ylab = 'credit', type="p",pch=20,col=df$brand)
plot(df$age,df$credit, xlab = 'age', ylab = 'credit', type="p",pch=20,col=df$brand)
subplot_cols = 2
subplot_rows = 3
par(mfrow=c(subplot_rows,subplot_cols))
plot(df$brand,df$salary, xlab = 'brand', ylab = 'salary')
plot(df$brand,df$age, xlab = 'brand', ylab = 'age')
plot(df$brand,df$credit, xlab = 'brand', ylab = 'credit')
plot(df$salary,df$age, xlab = 'salary', ylab = 'age', type="p",pch=20,col=df$brand)
plot(df$salary,df$credit, xlab = 'salary', ylab = 'credit', type="p",pch=20,col=df$brand)
plot(df$age,df$credit, xlab = 'age', ylab = 'credit', type="p",pch=20,col=df$brand)
subplot_cols = 2
subplot_rows = 3
par(mfrow=c(subplot_rows,subplot_cols))
plot(df$brand,df$salary, xlab = 'brand', ylab = 'salary')
plot(df$brand,df$age, xlab = 'brand', ylab = 'age')
plot(df$brand,df$credit, xlab = 'brand', ylab = 'credit')
plot(df$salary,df$age, xlab = 'salary', ylab = 'age', type="p",pch=20,col=df$brand)
plot(df$salary,df$credit, xlab = 'salary', ylab = 'credit', type="p",pch=20,col=df$brand)
plot(df$age,df$credit, xlab = 'age', ylab = 'credit', type="p",pch=20,col=df$brand)
View(df)
